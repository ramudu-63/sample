"use strict";function Predicate(){this.selector="inList",this.options={},this.children=null}function Dynamic(a){function b(a){e.running=!1,e.value=a}function c(a){e.running=!1,e.error=a}function d(d){e.running=!0,e.error=null,e.value=null,a(d).then(b,c)}var e={running:!0,value:null,error:null};return e.refresh=function(){d(!0)},d(!1),e}function Result(a){this.uid=a.uid,this.checked=!1,this.actions=[]}angular.module("friendlist2.app",["ui.select2","friendlist2.models","friendlist2.directives","friendlist2.fb"]).config(["$routeProvider",function(a){a.when("/",{templateUrl:"views/main.html",controller:"MainCtrl"}).otherwise({redirectTo:"/"})}]),angular.module("friendlist2.fb",["friendlist2.models"]).service("facebook",["$rootScope","$q","sessionCache",function(a,b,c){function d(b){a.$apply(function(){e.status=b,e.connected="connected"===b.status,e.connected&&(c.cacheBucket=b.authResponse.userID)})}var e={connected:!1};return a.facebook=e,FB.getLoginStatus(d),FB.Event.subscribe("auth.authResponseChange",d),e.login=function(a){var c=b.defer();return FB.login(function(a){d(a),c.resolve(a)},{scope:a}),c.promise},e.logout=function(){var a=b.defer();return FB.logout(function(b){d(b),a.resolve(b)}),a.promise},e.api=function(c,d,e){var f=b.defer();return FB.api(c,d,e,function(b){a.$apply(function(){b?b.error?f.reject(b.error):f.resolve(b):f.reject(new Error("cannot get facebook response"))})}),f.promise},e.fql=function(a){return e.api("/fql","GET",{q:a}).then(function(a){return a.data})},e.me=null,a.$watch("facebook.connected",function(b){b?c("me",function(){return e.api("/me","GET",{fields:"name,id"})})().then(function(b){e.me=b,a.reallyConnected=!0},function(){console.error("Cannot get Facebook ID"),e.me=null}):e.me=null}),e}]).service("flm",["$rootScope","Dynamic","facebook","sessionCache","$q",function(a,b,c,d,e){function f(a){var c=null,d=function(){return c||(c=new b(a)),c};return d.maybe=function(a){c&&a(c)},d.refresh=function(){return d.maybe(It.send("refresh"))},d}function g(a){function b(){var b=c,d=b.defer;a(b.ids).then(function(a){d.resolve(a)},function(a){d.reject(a)}),c=null}var c;return function(a){return c?c.map[a]||c.ids.push(a):(c={ids:[a],defer:e.defer(),map:{}},setTimeout(b,100)),c.map[a]=!0,c.defer.promise.then(function(b){return b[a]})}}var h={};h.list=f(d("lists",function(){return c.fql("SELECT flid, name, type FROM friendlist WHERE owner = me() ORDER BY name").then(function(a){var b=["close_friends","acquaintances","work","education","current_city","family","user_created","restricted"];return _c.sortBy(It.get("type").compose(_.partial(_.indexOf,b)))(a)})})),h.group=f(d("groups",function(){return c.fql("SELECT gid, name FROM group WHERE gid IN (SELECT gid FROM group_member WHERE uid = me()) ORDER BY name")}));var i=g(function(a){return c.api("/","GET",{ids:a.join(","),fields:"id,name,link"})}),j={};return h.user=function(a){return j[a]||(j[a]=new b(d("user"+a,function(){return i(a)})))},h.userLink=function(a){var b=h.user(a);return b.value?'<a href="'+b.value.link+'">'+b.value.name+"</a>":'<span class="wait-for-info">[... '+a+" ...]</span>"},a.reallyConnected=!1,a.$watch("facebook.connected",function(a){a&&(h.list.refresh(),h.group.refresh())}),a.flm=h,h}]),Predicate.compile=function(a){return function(b){return a.replace(/\{\{(\w+)\}\}/g,function(a,c){return b.options[c]})}};var brackets=function(a){return"("+a+")"},selectors={inList:{text:"In list",ui:"list",validate:It.get("options").get("list"),fql:Predicate.compile("uid IN (SELECT uid FROM friendlist_member WHERE flid = {{list}})"),order:1},notInList:{text:"Not in list",ui:"list",validate:It.get("options").get("list"),fql:Predicate.compile("NOT (uid IN (SELECT uid FROM friendlist_member WHERE flid = {{list}}))"),order:2},noUserList:{text:"Not in user list",ui:"blank",fql:Predicate.compile("NOT (uid IN (SELECT uid FROM friendlist_member WHERE flid IN (SELECT flid FROM friendlist WHERE owner = me() AND type = 'user_created')))"),order:4},noList:{text:"Not in any list",ui:"blank",fql:Predicate.compile("NOT (uid IN (SELECT uid FROM friendlist_member WHERE flid IN (SELECT flid FROM friendlist WHERE owner = me())))"),order:5},inGroup:{text:"In group",ui:"group",validate:It.get("options").get("group"),fql:Predicate.compile("uid IN (SELECT uid FROM group_member WHERE gid = {{group}})"),order:10},notInGroup:{text:"Not in group",ui:"group",validate:It.get("options").get("group"),fql:Predicate.compile("NOT (uid IN (SELECT uid FROM group_member WHERE gid = {{group}}))"),order:11},any:{text:"Any of These",ui:"blank",children:!0,validate:function(a){return Predicate.validate(a.children)},fql:function(a){return _.map(a.children,It.send("fql")).map(brackets).join("\nOR ")},order:100}};!function(a){a.getChildren=function(){return selectors[this.selector].children&&!this.children&&(this.children=[new Predicate]),this.children},a.validate=function(){var a=selectors[this.selector].validate;return!a||a(this)},a.fql=function(){return selectors[this.selector].fql(this)}}(Predicate.prototype),Predicate.validate=function(a){return _.every(a,It.send("validate"))},Predicate.fql=function(a){return _.map(a,It.send("fql")).map(brackets).join("\nAND ")},angular.module("friendlist2.models",[]).value("Predicate",Predicate).value("Dynamic",Dynamic).value("Result",Result).value("selectors",selectors).factory("sessionCache",["$q",function(a){function b(c,d){function e(a){return b.cacheBucket+":"+a}return function(b){function f(a){return sessionStorage[g]=JSON.stringify(a),a}var g=e(c);return!b&&sessionStorage[g]?a.when(JSON.parse(sessionStorage[g])):d(b).then(f)}}return b.cacheBucket="",b}]),angular.module("friendlist2.directives",["friendlist2.models","friendlist2.fb","ui.select2"]).directive("predicateEditor",["selectors",function(a){var b=_c.sortBy("order"),c=_c.map(function(a,b){return{value:b,text:a.text,order:a.order,real:a}}),d=b(c(a)),e=_.filter(d,It.not(It.get("real").get("children")));return{restrict:"A",transclude:!0,scope:{predicates:"=predicateEditor"},templateUrl:"views/predicate-editor.html",link:function(b,c,f){b.selectors=f.nested?e:d,b.selector=function(b){return a[b]}}}}]).directive("dynamic",function(){return{restrict:"A",transclude:!0,scope:!0,template:'<div ng-repeat="wtf in dynamic.running ? [] : [1]"><wtf ng-transclude></wtf> <button ng-hide="noReload" class="btn" ng-click="dynamic.refresh()"><i class="icon-refresh"></i></button></div><div ng-show="dynamic.running" flm-progress-bar></div>',link:function(a,b,c){a.$parent.$watch(c.dynamic,function(b){a.dynamic=b,a.noReload="true"===c.noReload})}}}).directive("flmProgressBar",function(){return{replace:!0,template:'<div class="loading progress progress-striped active"><div class="bar" style="width:100%"></div>'}}).directive("flmListSelector",["flm",function(a){return{restrict:"A",transclude:!0,scope:{noReload:"@"},template:'<div class="list-selector" dynamic="list" no-reload="{{noReload}}"><select ui-select2="{ placeholder: \'select a list\' }" ng-model="predicate.options.list" class="select-friendlist"><option ng-repeat="friendlist in list.value" value="{{friendlist.flid}}" data-type="{{friendlist.type}}">{{friendlist.name}}</option></select></div>',link:function(b){b.predicate=b.$parent.predicate,b.list=a.list()}}}]).directive("flmGroupSelector",["flm",function(a){return{restrict:"A",transclude:!0,scope:{},template:'<div class="group-selector" dynamic="list"><select ui-select2="{ placeholder: \'select a group\' }" ng-model="predicate.options.group" class="select-group"><option ng-repeat="group in list.value" value="{{group.gid}}">{{group.name}}</option></select></div>',link:function(b){b.predicate=b.$parent.predicate,b.list=a.group()}}}]).directive("sticky",function(){return{link:function(a,b){$(b).sticky({topSpacing:0})}}}),angular.module("friendlist2.app").controller("MainCtrl",["$scope","Predicate","selectors","Dynamic","$q","$timeout","facebook","flm","sessionCache","Result",function(a,b,c,d,e,f,g,h,i,j){function k(){return _.filter(a.query.value,It.get("checked"))}a.requiredScope="user_groups,friends_groups,read_friendlists,manage_friendlists",a.predicates=[new b],a.validatePredicates=function(a){return b.validate(a)},a.generateFql=function(a){return"SELECT uid\nFROM user\nWHERE (uid IN (SELECT uid2 FROM friend WHERE uid1 = me()))\nAND "+b.fql(a)+"\n"+"ORDER BY name"},a.query=new d(function(){return e.when(null)}),a.query.dummy=!0,a.executeQuery=function(b){var c=a.generateFql(b),e=i("fql:"+c,function(){return g.fql(c)});a.query=new d(function(a){return e(a).then(function(a){return a.map(It.instantiate(j))})})},a.checkAll=function(b){_.each(a.query.value,It.set("checked",b))},a.countCheck=function(){return k().length},a.listOperation=function(b){function c(){a.action.running=!1,_.each(e,function(a){a.actions.push(h)})}function d(b){a.action.running=!1,window.alert(b),console.error(b)}a.action.running=!0;var e=k(),f="/"+a.action.list+"/members",h={method:b,list:a.action.list},i=_.map(e,It.get("uid"));g.api(f,b,{members:i.join(",")}).then(c,d)},a.action={}}]),angular.module("friendlist2.app").controller("PredicateCtrl",["$scope","Predicate",function(a,b){a.addPredicate=function(c){var d=_.indexOf(a.predicates,c)+1;a.predicates.splice(d,0,new b)},a.removePredicate=function(b){var c=_.indexOf(a.predicates,b);a.predicates.splice(c,1)}}]);